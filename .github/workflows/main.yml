# This is a basic workflow to help you get started with Actions

name: Build-Cooolis

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  BuildCooolis:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2

    - name: Enable Developer Command Prompt
      uses: ilammy/msvc-dev-cmd@v1.2.0
    
    - name: Compile x86 Program
      working-directory: ./Cooolis-ms-Loader/Cooolis-ms
      run: msbuild /p:configuration=release /p:platform=x86 Cooolis-ms.vcxproj
      
    - name: Compile x64 Program
      working-directory: ./Cooolis-ms-Loader/Cooolis-ms
      run: msbuild /p:configuration=release /p:platform=x64 Cooolis-ms.vcxproj
    - name: Install 7Zip PowerShell Module
      shell: powershell
      run: Install-Module 7Zip4PowerShell -Force -Verbose
      
    - name: pack x86 zip
      shell: powershell
      run: powershell Compress-7Zip "Release" -ArchiveFileName "C:\Cooolis-msX86.zip" -Format Zip
      
    - name: pack x64 zip
      shell: powershell
      run: powershell Compress-7Zip "x64\Release" -ArchiveFileName "C:\Cooolis-msX64.zip" -Format Zip
      
    - name: Create Release
      id: create_release
      uses: actions/create-release@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v1.2
        release_name: Cooolis-ms Release v1.2
        body: |
          Automated Release by GitHub Action CI
        draft: false
        prerelease: true
    - name: Upload Release Asset (x64)
      id: upload-release-asset-x64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: C:\Cooolis-msX64.zip
        asset_name: Cooolis-msX64.zip
        asset_content_type: application/zip
    - name: Upload Release Asset (x86)
      id: upload-release-asset-x86
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: C:\Cooolis-msX86.zip
        asset_name: Cooolis-msX86.zip
        asset_content_type: application/zip
